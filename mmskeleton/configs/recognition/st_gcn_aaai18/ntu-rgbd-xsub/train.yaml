argparse_cfg:
  gpus:
    bind_to: processor_cfg.gpus
    help: number of gpus
  work_dir:
    bind_to: processor_cfg.work_dir
    help: the dir to save logs and models
    default: ./work_dir/recognition/ST_GCN_18/ntu-rgbd-xsub
  batch_size:
    bind_to: processor_cfg.batch_size
  resume_from:
    bind_to: processor_cfg.resume_from
    help: the checkpoint file to resume from



processor_cfg:
  type: 'processor.recognition.train'

  # model setting
  model_cfg:
    type: 'models.backbones.ST_GCN_18'
    in_channels: 3
    num_class: 60
    dropout: 0.5
    edge_importance_weighting: True
    graph_cfg:
      layout: 'ntu-rgb+d'
      strategy: 'spatial'
  loss_cfg:
    type: 'torch.nn.CrossEntropyLoss'

  # dataset setting
  dataset_cfg:
    - type: 'deprecated.datasets.skeleton_feeder.SkeletonFeeder'
      data_path: ./data/NTU-RGB-D/xsub/train_data.npy
      label_path: ./data/NTU-RGB-D/xsub/train_label.pkl
      # debug: true
    - type: 'deprecated.datasets.skeleton_feeder.SkeletonFeeder'
      data_path: ./data/NTU-RGB-D/xsub/val_data.npy
      label_path: ./data/NTU-RGB-D/xsub/val_label.pkl
      # debug: true

  # dataloader setting
  batch_size: 64
  gpus: 4

  # optimizer setting
  optimizer_cfg:
    type: 'torch.optim.SGD'
    lr: 0.1
    momentum: 0.9
    nesterov: true
    weight_decay: 0.00001

  # runtime setting
  workflow: [['train', 5], ['val', 1]]
  work_dir: 
  log_level: 0
  total_epochs: 80
  training_hooks:
    lr_config:
      policy: 'step'
      step: [10, 50]
    log_config:
      interval: 100
      hooks:
        - type: TextLoggerHook
    checkpoint_config:
      interval: 5
    optimizer_config:
  resume_from:
  load_from: